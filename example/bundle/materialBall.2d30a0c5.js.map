{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,oGASA,IAAIC,EAAUC,EAAUC,EAAWC,EAAYC,EAAQC,EAAQC,EAC3DC,EACJ,MAAMC,EAAS,CAEdC,UAAW,CACVC,MAAO,UACPC,SAAU,UACVC,kBAAmB,EACnBC,UAAW,GACXC,UAAW,GACXC,IAAK,MACLC,aAAc,EACdC,QAAS,GAEVC,UAAW,CACVR,MAAO,UACPC,SAAU,UACVC,kBAAmB,EACnBC,UAAW,GACXC,UAAW,GACXE,aAAc,EACdD,IAAK,MACLE,QAAS,GAEVE,UAAW,CACVT,MAAO,UACPG,UAAW,IACXC,UAAW,KAEZM,aAAa,EACbC,qBAAsB,EACtBC,oBAAqB,EACrBC,QAAS,EACTC,gBAAiB,EACjBC,iBAAiB,EACjBC,gBAAiB,EAAIC,OAAOC,iBAC5BC,sBAAuB,GACvBC,mBAAoB,GACpBC,MAAO,GAIHJ,OAAOK,SAASC,KAAKC,SAAU,kBAEnC1B,EAAOC,UAAUK,UAAY,EAC7BN,EAAOC,UAAUI,UAAY,IAC7BL,EAAOC,UAAUO,aAAe,EAChCR,EAAOC,UAAUC,MAAQ,UACzBF,EAAOe,QAAU,IA0OlB,SAASY,IAER,MAAMC,EAAIT,OAAOU,WACXC,EAAIX,OAAOY,YACXC,EAAQhC,EAAOkB,gBACfe,EAAMd,OAAOC,iBAEnBzB,EAAWuC,OAAOC,QAASP,EAAII,EAAQC,EAAKH,EAAIE,EAAQC,GACxDtC,EAAWyC,QAEX5C,EAAS2C,QAASP,EAAGE,GACrBtC,EAAS6C,cAAelB,OAAOC,iBAAmBY,GAClDpC,EAAO0C,OAASV,EAAIE,EACpBlC,EAAO2C,yBAIR,SAASC,IAER7C,EAAWyC,QAKZ,SAASK,IAERC,sBAAuBD,GAEvB,MAAME,EAAK7C,EAAW,GACtB6C,EAAGzC,MAAM0C,IAAK5C,EAAOC,UAAUC,OAAQ2C,sBACvCF,EAAGxC,SAASyC,IAAK5C,EAAOC,UAAUE,UAAW0C,sBAC7CF,EAAGvC,kBAAoBJ,EAAOC,UAAUG,kBACxCuC,EAAGrC,UAAYN,EAAOC,UAAUK,UAChCqC,EAAGtC,UAAYL,EAAOC,UAAUI,UAChCsC,EAAGnC,aAAeR,EAAOC,UAAUO,aACnCmC,EAAGpC,IAAMP,EAAOC,UAAUM,IAC1BoC,EAAGlC,QAAUT,EAAOC,UAAUQ,QAE9B,MAAMqC,EAAKhD,EAAW,GACtBgD,EAAG5C,MAAM0C,IAAK5C,EAAOU,UAAUR,OAAQ2C,sBACvCC,EAAG3C,SAASyC,IAAK5C,EAAOU,UAAUP,UAAW0C,sBAC7CC,EAAG1C,kBAAoBJ,EAAOU,UAAUN,kBACxC0C,EAAGxC,UAAYN,EAAOU,UAAUJ,UAChCwC,EAAGzC,UAAYL,EAAOU,UAAUL,UAChCyC,EAAGtC,aAAeR,EAAOU,UAAUF,aACnCsC,EAAGvC,IAAMP,EAAOU,UAAUH,IAC1BuC,EAAGrC,QAAUT,EAAOU,UAAUD,QAE9B,MAAMsC,EAAKjD,EAAW,GACtBiD,EAAG7C,MAAM0C,IAAK5C,EAAOW,UAAUT,OAAQ2C,sBACvCE,EAAGzC,UAAYN,EAAOW,UAAUL,UAChCyC,EAAG1C,UAAYL,EAAOW,UAAUN,UAEhCV,EAAWqD,SAASC,UAAUC,WAAYxD,EAAUuD,UAAWvD,EAAUyD,UAEzExD,EAAWqD,SAAS1B,mBAAqBtB,EAAOsB,mBAChD3B,EAAWqD,SAASnC,qBAAuBb,EAAOa,qBAClDlB,EAAWqD,SAASI,gBAAkB,IAEtCxD,EAAOyD,oBAEP,IAAM,IAAIC,EAAI,EAAGC,EAAIvD,EAAOgB,gBAAiBsC,EAAIC,EAAGD,IAEnD3D,EAAW6D,SAIZhE,EAASiE,WAAY,EACrB5D,EAAO6D,OAAQlE,GACfA,EAASiE,WAAY,EAErB1D,EAAU4D,UAAY,YAAaC,KAAKC,MAAOlE,EAAWmE,WA5SvC3C,OAAOU,WAAaV,OAAOY,YAC5B,MAElB/B,EAAOe,QAAU6C,KAAKG,IAAK/D,EAAOe,QAAS,GAC3Cf,EAAOkB,iBAAmB,GAC1BlB,EAAOuB,MAAQ,GAMhByC,iBAECxE,EAAW,IAAIF,EAAA2E,cAAqB,CAAEC,WAAW,IACjD1E,EAAS2E,YAAc7E,EAAA8E,sBACvBC,SAASC,KAAKC,YAAa/E,EAASgF,YAEpC5E,EAAS,IAAIN,EAAAmF,kBAAyB,GAAItD,OAAOU,WAAaV,OAAOY,YAAa,KAAO,KACzFnC,EAAO8E,SAAS9B,KAAK,EAAK,EAAG,GAE7BjD,EAAa,IAAIgF,EAAAC,oBAAqBpF,GACtCG,EAAWkF,OAASjF,EACpBD,EAAWqD,SAAW,IAAI2B,EAAAG,4BAC1BnF,EAAWqD,SAAS+B,UAAW,UAAW/E,EAAOe,SACjDpB,EAAWqD,SAAS+B,UAAW,yBAA0B/E,EAAOqB,uBAChE1B,EAAW4B,MAAMqB,IAAK5C,EAAOuB,MAAOvB,EAAOuB,OAE3C1B,EAAS,IAAImF,EAAAC,eAAgB,IAAI3F,EAAA4F,kBAAyB,CACzDC,IAAKxF,EAAWuC,OAAOkD,WAGxB3F,EAAW,IAAI4F,EAAAC,cAAe1F,EAAQJ,EAASgF,YAC/C/E,EAAS8F,iBAAkB,UAAU,KAEpC5F,EAAWyC,WAIZrC,EAAYsE,SAASmB,eAAgB,WAErC,MAAMC,EAAgB,IAAIC,SAASC,KAElC,IAAIC,EAAAC,YACFC,KAAM,kHAAkHV,IAExH,MAAMW,EAAiB,IAAIzG,EAAA0G,eAAsBxG,GACjDuG,EAAeE,uBAEf,MAAMC,EAASH,EAAeI,oBAAqBf,GAEnDzF,EAAWqD,SAASoD,eAAiBF,EAAOd,QAC5CO,UAMGU,EAAY,IAAI1B,EAAA2B,0BAChBC,GAAc,IAAIC,EAAAC,YACtBC,kBAAmBC,EAAAC,gBACnBC,UAAW,yGACXC,MAAMC,IAEN,MAAMC,EAAQ,IAAI1H,EAAA2H,MAElBF,EAAKG,MAAMlF,MAAMmF,UAAW,KAC5BJ,EAAKG,MAAM7D,oBACX2D,EAAMI,IAAKL,EAAKG,OAEhB,MAAMG,EAAM,IAAI/H,EAAAgI,KAChBD,EAAIE,cAAeR,EAAKG,OAExB,MAAMrD,EAAQ,IAAIvE,EAAAkI,KACjB,IAAIlI,EAAAmI,uBAA8B,EAAG,EAAG,IAAM,KAC9C,IAAInI,EAAAoI,qBAA4B,CAAExH,MAAO,SAAUG,UAAW,EAAGC,UAAW,OAE7EuD,EAAM8D,SAAW9D,EAAM8D,SAASC,eAChC/D,EAAM8D,SAASE,cACfhE,EAAMa,SAASoD,EAAIT,EAAIU,IAAID,EAAI,IAC/Bd,EAAMI,IAAKvD,GAEX,MAAM5D,EAAY,IAAIX,EAAAoI,qBAChBhH,EAAY,IAAIpB,EAAAoI,qBAgCtB,OA9BAX,EAAKG,MAAMc,UAAUC,IAIfA,EAAEN,UAENM,EAAEN,SAASO,uBAII,aAAXD,EAAEE,KAENF,EAAEjF,SAAWtC,EAIbuH,EAAEjF,SAAW/C,EAIE,gBAAXgI,EAAEE,OAENF,EAAEjF,SAAWtC,MAMfZ,EAAY,CAAEG,EAAWS,EAAWmD,EAAMb,UAEnCqD,EAAU+B,SAAUpB,MAG3BF,MAAMuB,IAEN3I,EAAY2I,EAEZ,MAvLHC,IAuLWA,EAvLXnF,SAuLgBA,EAvLhBF,UAuL0BA,GAAcoF,EAC/BV,EAAWW,EAAIX,SACf3E,EAAWrD,EAAWqD,SAE5BA,EAASsF,IAAIpF,WAAYoF,GACzBtF,EAASuF,gBAAgBrF,WAAYyE,EAASa,WAAWC,QACzDzF,EAAS0F,iBAAiBxF,WAAYyE,EAASa,WAAWG,SAC1D3F,EAAS4F,YAAY1F,WAAYyE,EAASa,WAAWK,IACrD7F,EAAS8F,uBAAuB5F,WAAYyE,EAASa,WAAWO,eAChE/F,EAASG,SAAS6F,YAAaxJ,EAAU,KAAM,KAAM2D,GACrDH,EAASC,UAAUC,WAAYD,EAAWE,GAC1CH,EAAS+B,UAAW,kBAAmB9B,EAAUgG,QAEjD5C,EAAU6C,mBAINxD,QAAQyD,IAAK,CAAE5C,EAAad,IAElCpB,SAASmB,eAAgB,WAAY4D,SAErCzH,IACAR,OAAOoE,iBAAkB,SAAU5D,GAEnC,MAAM0H,EAAM,IAAIC,EAAAC,IACVC,EAAWH,EAAII,UAAW,gBAChCD,EAASpC,IAAKpH,EAAQ,mBAAoB0J,UAAUC,IAEnDnK,EAAS2E,YAAcwF,EAAQrK,EAAA8E,sBAA8B9E,EAAAsK,cAC7D/J,EAAOmD,SAAS6G,aAAc,KAG/BL,EAASpC,IAAKpH,EAAQ,eAAgB0J,UAAUC,IAE/ChK,EAAWiB,YAAc+I,KAG1BH,EAASpC,IAAKpH,EAAQ,QAAS,EAAG,EAAG,GAAI0J,UAAUC,IAElDhK,EAAW4B,MAAMqB,IAAK+G,EAAOA,MAG9BH,EAASpC,IAAKpH,EAAQ,kBAAmB,EAAG,GAAI,GAChDwJ,EAASpC,IAAKpH,EAAQ,qBAAsB,EAAG,GAAI0J,UAAU,KAE5D/J,EAAWyC,WAGZoH,EAASpC,IAAKpH,EAAQ,uBAAwB,EAAG,IAAK0J,UAAU,KAE/D/J,EAAWyC,WAGZoH,EAASpC,IAAKpH,EAAQ,sBAAuB,EAAG,IAAK0J,UAAUI,IAE9DnK,EAAWqD,SAASlC,oBAAoBiJ,gBAAgB,IAAIzK,EAAA0K,SAAgBC,cAAeH,IAC3FnK,EAAWyC,WAGZoH,EAASpC,IAAKpH,EAAQ,UAAW,EAAG,GAAI,GAAI0J,UAAUC,IAErDhK,EAAWqD,SAAS+B,UAAW,UAAW4E,GAC1ChK,EAAWyC,WAGZoH,EAASpC,IAAKpH,EAAQ,wBAAyB,EAAG,GAAI,GAAI0J,UAAUC,IAEnEhK,EAAWqD,SAAS+B,UAAW,yBAA0B4E,GACzDhK,EAAWyC,WAGZoH,EAASpC,IAAKpH,EAAQ,kBAAmB,GAAK,GAAI0J,UAAU,KAE3D/H,OAID,MAAMuI,EAAab,EAAII,UAAW,kBAClCS,EAAWC,SAAUnK,EAAOC,UAAW,SAAUyJ,SAAUlH,GAC3D0H,EAAWC,SAAUnK,EAAOC,UAAW,YAAayJ,SAAUlH,GAC9D0H,EAAW9C,IAAKpH,EAAOC,UAAW,oBAAqB,EAAK,GAAM,KAAOyJ,SAAUlH,GACnF0H,EAAW9C,IAAKpH,EAAOC,UAAW,YAAa,EAAG,GAAIyJ,SAAUlH,GAChE0H,EAAW9C,IAAKpH,EAAOC,UAAW,YAAa,EAAG,GAAIyJ,SAAUlH,GAChE0H,EAAW9C,IAAKpH,EAAOC,UAAW,UAAW,EAAG,GAAIyJ,SAAUlH,GAC9D0H,EAAW9C,IAAKpH,EAAOC,UAAW,eAAgB,EAAG,GAAIyJ,SAAUlH,GACnE0H,EAAW9C,IAAKpH,EAAOC,UAAW,MAAO,GAAK,GAAMyJ,SAAUlH,GAC9D0H,EAAWE,OAEX,MAAMC,EAAahB,EAAII,UAAW,iBAClCY,EAAWF,SAAUnK,EAAOU,UAAW,SAAUgJ,SAAUlH,GAC3D6H,EAAWF,SAAUnK,EAAOU,UAAW,YAAagJ,SAAUlH,GAC9D6H,EAAWjD,IAAKpH,EAAOU,UAAW,oBAAqB,EAAK,GAAM,KAAOgJ,SAAUlH,GACnF6H,EAAWjD,IAAKpH,EAAOU,UAAW,YAAa,EAAG,GAAIgJ,SAAUlH,GAChE6H,EAAWjD,IAAKpH,EAAOU,UAAW,YAAa,EAAG,GAAIgJ,SAAUlH,GAChE6H,EAAWjD,IAAKpH,EAAOU,UAAW,UAAW,EAAG,GAAIgJ,SAAUlH,GAC9D6H,EAAWjD,IAAKpH,EAAOU,UAAW,eAAgB,EAAG,GAAIgJ,SAAUlH,GACnE6H,EAAWjD,IAAKpH,EAAOU,UAAW,MAAO,GAAK,GAAMgJ,SAAUlH,GAC9D6H,EAAWD,OAEX,MAAME,EAAajB,EAAII,UAAW,kBAClCa,EAAWH,SAAUnK,EAAOW,UAAW,SAAU+I,SAAUlH,GAC3D8H,EAAWlD,IAAKpH,EAAOW,UAAW,YAAa,EAAG,GAAI+I,SAAUlH,GAChE8H,EAAWlD,IAAKpH,EAAOW,UAAW,YAAa,EAAG,GAAI+I,SAAUlH,GAEhEC,IAxND8H","sources":["example/materialBall.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingSceneGenerator, PathTracingRenderer, PhysicalPathTracingMaterial } from '../src/index.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, camera, fsQuad, materials;\nlet samplesEl;\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.1,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\topacity: 1.0,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.8,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.01,\n\t\tmetalness: 0.05,\n\t},\n\tstableNoise: false,\n\tenvironmentIntensity: 3,\n\tenvironmentRotation: 0,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\n// clamp value for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\tcamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.camera = camera;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'BOUNCES', params.bounces );\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t} ) );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tconst envMapPromise = new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr', texture => {\n\n\t\t\t\tconst pmremGenerator = new THREE.PMREMGenerator( renderer );\n\t\t\t\tpmremGenerator.compileCubemapShader();\n\n\t\t\t\tconst envMap = pmremGenerator.fromEquirectangular( texture );\n\n\t\t\t\tptRenderer.material.environmentMap = envMap.texture;\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t} );\n\n\tconst generator = new PathTracingSceneGenerator();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/gltf-demo-models/main/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshStandardMaterial();\n\t\t\tconst material2 = new THREE.MeshStandardMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\t\t\tmaterial.setDefine( 'MATERIAL_LENGTH', materials.length );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tfsQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'environmentRotation', 0, 40 ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.setFromMatrix4( new THREE.Matrix4().makeRotationY( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'BOUNCES', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.open();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.open();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.target.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst m1 = materials[ 0 ];\n\tm1.color.set( params.material1.color ).convertSRGBToLinear();\n\tm1.emissive.set( params.material1.emissive ).convertSRGBToLinear();\n\tm1.emissiveIntensity = params.material1.emissiveIntensity;\n\tm1.metalness = params.material1.metalness;\n\tm1.roughness = params.material1.roughness;\n\tm1.transmission = params.material1.transmission;\n\tm1.ior = params.material1.ior;\n\tm1.opacity = params.material1.opacity;\n\n\tconst m2 = materials[ 1 ];\n\tm2.color.set( params.material2.color ).convertSRGBToLinear();\n\tm2.emissive.set( params.material2.emissive ).convertSRGBToLinear();\n\tm2.emissiveIntensity = params.material2.emissiveIntensity;\n\tm2.metalness = params.material2.metalness;\n\tm2.roughness = params.material2.roughness;\n\tm2.transmission = params.material2.transmission;\n\tm2.ior = params.material2.ior;\n\tm2.opacity = params.material2.opacity;\n\n\tconst m3 = materials[ 2 ];\n\tm3.color.set( params.material3.color ).convertSRGBToLinear();\n\tm3.metalness = params.material3.metalness;\n\tm3.roughness = params.material3.roughness;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.environmentBlur = 0.35;\n\n\tcamera.updateMatrixWorld();\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0473c5c83fd2a77a$var$renderer","$0473c5c83fd2a77a$var$controls","$0473c5c83fd2a77a$var$sceneInfo","$0473c5c83fd2a77a$var$ptRenderer","$0473c5c83fd2a77a$var$camera","$0473c5c83fd2a77a$var$fsQuad","$0473c5c83fd2a77a$var$materials","$0473c5c83fd2a77a$var$samplesEl","$0473c5c83fd2a77a$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","opacity","material2","material3","stableNoise","environmentIntensity","environmentRotation","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","location","hash","includes","$0473c5c83fd2a77a$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","target","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","$0473c5c83fd2a77a$var$reset","$0473c5c83fd2a77a$var$animate","requestAnimationFrame","m1","set","convertSRGBToLinear","m2","m3","material","materials","updateFrom","textures","environmentBlur","updateMatrixWorld","i","l","update","autoClear","render","innerText","Math","floor","samples","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","document","body","appendChild","domElement","PerspectiveCamera","position","$4CEV9","PathTracingRenderer","camera","PhysicalPathTracingMaterial","setDefine","$RPVlj","FullScreenQuad","MeshBasicMaterial","map","texture","$5Rd1x","OrbitControls","addEventListener","getElementById","envMapPromise","Promise","resolve","$891vQ","RGBELoader","load","pmremGenerator","PMREMGenerator","compileCubemapShader","envMap","fromEquirectangular","environmentMap","generator","PathTracingSceneGenerator","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","then","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderBufferGeometry","MeshStandardMaterial","geometry","toNonIndexed","clearGroups","y","min","traverse","c","computeVertexNormals","name","generate","result","bvh","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","length","dispose","all","remove","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","v","setFromMatrix4","Matrix4","makeRotationY","matFolder1","addColor","open","matFolder2","matFolder3","$0473c5c83fd2a77a$var$init"],"version":3,"file":"materialBall.2d30a0c5.js.map"}